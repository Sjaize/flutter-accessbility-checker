import React, { useState, useEffect } from 'react';
import { AccessibilityIssue, FlutterComponent } from '../lib/types';

interface MarkdownDocumentationProps {
  issues: AccessibilityIssue[];
  components: FlutterComponent[];
  accessibilityScore: number;
}

export default function MarkdownDocumentation({ issues, components, accessibilityScore }: MarkdownDocumentationProps) {
  const [markdown, setMarkdown] = useState<string>('');
  const [showPreview, setShowPreview] = useState<boolean>(false);

  useEffect(() => {
    generateMarkdown();
  }, [issues, components, accessibilityScore]);

  const generateMarkdown = () => {
    let md = `# Flutter Ï†ëÍ∑ºÏÑ± Î∂ÑÏÑù Î¨∏ÏÑú

## üìä ÌîÑÎ°úÏ†ùÌä∏ Í∞úÏöî

- **Î∂ÑÏÑù ÏùºÏãú**: ${new Date().toLocaleString('ko-KR')}
- **Ï†ÑÏ≤¥ Ï†ëÍ∑ºÏÑ± Ï†êÏàò**: ${accessibilityScore}/100
- **Ï¥ù Ïª¥Ìè¨ÎÑåÌä∏ Ïàò**: ${components.length}Í∞ú
- **Î∞úÍ≤¨Îêú Ïù¥Ïäà**: ${issues.length}Í∞ú

## üö® Ï†ëÍ∑ºÏÑ± Ïù¥Ïäà Î∂ÑÏÑù

### ÌÜµÍ≥Ñ ÏöîÏïΩ
- **Ïò§Î•ò (Error)**: ${issues.filter(i => i.type === 'error').length}Í∞ú
- **Í≤ΩÍ≥† (Warning)**: ${issues.filter(i => i.type === 'warning').length}Í∞ú
- **Ï†ïÎ≥¥ (Info)**: ${issues.filter(i => i.type === 'info').length}Í∞ú

### ÏÉÅÏÑ∏ Ïù¥Ïäà Î™©Î°ù

`;

    issues.forEach((issue, index) => {
      md += `#### ${index + 1}. ${issue.title}

**Ïú†Ìòï**: ${issue.type.toUpperCase()}
**ÏöîÏÜå**: ${issue.element}
**ÏÑ§Î™Ö**: ${issue.description}

**Í∞úÏÑ† Ï†úÏïà**:
\`\`\`dart
${issue.suggestions[0]?.text || 'Íµ¨Ï≤¥Ï†ÅÏù∏ ÏΩîÎìú Ï†úÏïàÏù¥ ÏóÜÏäµÎãàÎã§.'}
\`\`\`

---
`;
    });

    md += `
## üìÅ ÏΩîÎìú Íµ¨Ï°∞ Î∂ÑÏÑù

### Ïª¥Ìè¨ÎÑåÌä∏Î≥Ñ Ï†ëÍ∑ºÏÑ± Ï†êÏàò

`;

    components.forEach(component => {
      md += `#### ${component.name} (${component.type})
- **ÌååÏùº**: \`${component.file}:${component.line}\`
- **Ï†ëÍ∑ºÏÑ± Ï†êÏàò**: ${component.accessibilityScore}/100
- **Ïù¥Ïäà Ïàò**: ${component.issues.length}Í∞ú

${component.issues.length > 0 ? `**Î∞úÍ≤¨Îêú Ïù¥Ïäà**:
${component.issues.map(issue => `- ${issue}`).join('\n')}` : '**Ïù¥Ïäà ÏóÜÏùå** ‚úÖ'}

${component.dependencies && component.dependencies.length > 0 ? `**ÏùòÏ°¥ÏÑ±**:
${component.dependencies.map(dep => `- ${dep}`).join('\n')}` : ''}

---
`;
    });

    md += `
## üéØ Í∞úÏÑ† Í∂åÏû•ÏÇ¨Ìï≠

### 1. Ïö∞ÏÑ†ÏàúÏúÑ ÎÜíÏùå (Ïò§Î•ò)
${issues.filter(i => i.type === 'error').map(issue => `- ${issue.title}`).join('\n')}

### 2. Ïö∞ÏÑ†ÏàúÏúÑ Ï§ëÍ∞Ñ (Í≤ΩÍ≥†)
${issues.filter(i => i.type === 'warning').map(issue => `- ${issue.title}`).join('\n')}

### 3. Ïö∞ÏÑ†ÏàúÏúÑ ÎÇÆÏùå (Ï†ïÎ≥¥)
${issues.filter(i => i.type === 'info').map(issue => `- ${issue.title}`).join('\n')}

## üìã WCAG 2.2 Ï§ÄÏàò Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏

### Î†àÎ≤® A (ÌïÑÏàò)
- [ ] 1.1.1 ÎπÑÌÖçÏä§Ìä∏ ÏΩòÌÖêÏ∏†
- [ ] 2.1.1 ÌÇ§Î≥¥Îìú
- [ ] 2.4.2 ÌéòÏù¥ÏßÄ Ï†úÎ™©
- [ ] 4.1.2 Ïù¥Î¶Ñ Î∞è Ïó≠Ìï†

### Î†àÎ≤® AA (Í∂åÏû•)
- [ ] 1.4.3 ÎåÄÎπÑ (ÏµúÏÜå)
- [ ] 2.4.6 Ï†úÎ™© Î∞è ÎùºÎ≤®
- [ ] 2.5.5 ÏûÖÎ†• Î©îÏª§ÎãàÏ¶ò

### Î†àÎ≤® AAA (Í≥†Í∏â)
- [ ] 1.4.6 ÎåÄÎπÑ (Ìñ•ÏÉÅ)
- [ ] 2.1.3 ÌÇ§Î≥¥Îìú (ÏòàÏô∏ ÏóÜÏùå)

## üîß Í∞úÎ∞ú Í∞ÄÏù¥ÎìúÎùºÏù∏

### Ïù¥ÎØ∏ÏßÄ Ï†ëÍ∑ºÏÑ±
\`\`\`dart
// Ï¢ãÏùÄ ÏòàÏãú
Image.asset(
  'assets/logo.png',
  semanticLabel: 'ÌöåÏÇ¨ Î°úÍ≥†',
  width: 100,
  height: 100,
)

// ÎÇòÏÅú ÏòàÏãú
Image.asset('assets/logo.png')
\`\`\`

### Î≤ÑÌäº Ï†ëÍ∑ºÏÑ±
\`\`\`dart
// Ï¢ãÏùÄ ÏòàÏãú
Container(
  constraints: BoxConstraints(
    minWidth: 44.0,
    minHeight: 44.0,
  ),
  child: ElevatedButton(
    onPressed: () {},
    child: Text('ÌôïÏù∏'),
  ),
)

// ÎÇòÏÅú ÏòàÏãú
GestureDetector(
  onTap: () {},
  child: Container(
    width: 30,
    height: 30,
    child: Icon(Icons.check),
  ),
)
\`\`\`

### ÏÉâÏÉÅ ÎåÄÎπÑ
\`\`\`dart
// Ï¢ãÏùÄ ÏòàÏãú
Text(
  'Ï§ëÏöîÌïú ÌÖçÏä§Ìä∏',
  style: TextStyle(
    color: Colors.black87, // ÎÜíÏùÄ ÎåÄÎπÑ
    fontSize: 16.0,
  ),
)

// ÎÇòÏÅú ÏòàÏãú
Text(
  'Ï§ëÏöîÌïú ÌÖçÏä§Ìä∏',
  style: TextStyle(
    color: Colors.grey, // ÎÇÆÏùÄ ÎåÄÎπÑ
    fontSize: 16.0,
  ),
)
\`\`\`

## üìû Ï∂îÍ∞Ä ÏßÄÏõê

Ï†ëÍ∑ºÏÑ± Í∞úÏÑ†Ïóê ÎåÄÌïú Ï∂îÍ∞Ä ÎèÑÏõÄÏù¥ ÌïÑÏöîÌïòÏãúÎ©¥:
- WCAG 2.2 Í≥µÏãù Í∞ÄÏù¥ÎìúÎùºÏù∏ Ï∞∏Ï°∞
- Flutter Ï†ëÍ∑ºÏÑ± Í≥µÏãù Î¨∏ÏÑú ÌôïÏù∏
- Ï†ÑÎ¨∏ Ï†ëÍ∑ºÏÑ± Ïª®ÏÑ§ÌÑ¥Ìä∏ Î¨∏Ïùò

---

*Ïù¥ Î¨∏ÏÑúÎäî Flutter Accessibility CheckerÏóê ÏùòÌï¥ ÏûêÎèô ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§.*
`;

    setMarkdown(md);
  };

  const downloadMarkdown = () => {
    const blob = new Blob([markdown], { type: 'text/markdown' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `accessibility-documentation-${new Date().toISOString().split('T')[0]}.md`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="bg-white rounded-lg border border-gray-200 p-4">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-semibold">üìÑ Î¨∏ÏÑú ÏÉùÏÑ±</h3>
        <div className="flex gap-2">
          <button
            onClick={() => setShowPreview(!showPreview)}
            className="px-3 py-1 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700"
          >
            {showPreview ? 'Ìé∏Ïßë' : 'ÎØ∏Î¶¨Î≥¥Í∏∞'}
          </button>
          <button
            onClick={downloadMarkdown}
            className="px-3 py-1 text-sm bg-green-600 text-white rounded-lg hover:bg-green-700"
          >
            üì• Îã§Ïö¥Î°úÎìú
          </button>
        </div>
      </div>

      {showPreview ? (
        <div className="bg-gray-50 p-4 rounded-lg max-h-96 overflow-y-auto">
          <div className="prose prose-sm max-w-none">
            <pre className="whitespace-pre-wrap text-sm font-mono">{markdown}</pre>
          </div>
        </div>
      ) : (
        <div className="bg-gray-50 p-4 rounded-lg max-h-96 overflow-y-auto">
          <div className="prose prose-sm max-w-none">
            <div className="markdown-preview" dangerouslySetInnerHTML={{ __html: markdown.replace(/\n/g, '<br>') }} />
          </div>
        </div>
      )}
    </div>
  );
} 